CREATE TABLE archive_repository (
	id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	path VARCHAR(4096) NOT NULL,
	PRIMARY KEY (id),
	UNIQUE (path)
);

CREATE TABLE archive_thumbnail (
	id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	thumbnail BLOB NOT NULL,
	PRIMARY KEY (id)
);

CREATE TABLE archive (
	id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	repository_id INTEGER NOT NULL,
	path VARCHAR(4096) NOT NULL,
	is_error BOOLEAN NOT NULL,
	is_missing BOOLEAN NOT NULL,
	md5_hash CHAR(32) NOT NULL,
	page_count INTEGER,
	thumbnail_id INTEGER,
	last_modified BIGINT NOT NULL,
	PRIMARY KEY (id),
	UNIQUE (path),
	CONSTRAINT archive_fk1 FOREIGN KEY (repository_id) REFERENCES
		archive_repository (id) ON DELETE RESTRICT,
	CONSTRAINT archive_fk2 FOREIGN KEY (thumbnail_id) REFERENCES
		archive_thumbnail (id) ON DELETE SET NULL
);

CREATE TABLE issue (
	id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	archive_id INTEGER NOT NULL,
	name VARCHAR(255) NOT NULL,
	rating SMALLINT,
	PRIMARY KEY (id),
	CONSTRAINT issue_fk1 FOREIGN KEY (archive_id) REFERENCES
		archive (id) ON DELETE RESTRICT
	-- tbd: check constraint on rating
);

CREATE TABLE tag_category (
	id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	name VARCHAR(255) NOT NULL,
	PRIMARY KEY (id)
);

CREATE TABLE tag (
	id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	name VARCHAR(255) NOT NULL,
	category_id INTEGER NOT NULL,
	PRIMARY KEY (id),
	UNIQUE(name),
	CONSTRAINT tag_fk1 FOREIGN KEY (category_id) REFERENCES
		tag_category (id) ON DELETE RESTRICT
);

CREATE TABLE issue_tag (
	id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	issue_id INTEGER NOT NULL,
	tag_id INTEGER NOT NULL,
	PRIMARY KEY (id),
	UNIQUE (issue_id, tag_id),
	CONSTRAINT issue_tag_fk1 FOREIGN KEY (issue_id) REFERENCES
		issue (id) ON DELETE CASCADE,
	CONSTRAINT issue_tag_fk2 FOREIGN KEY (tag_id) REFERENCES
		tag (id) ON DELETE RESTRICT
);

-- CREATE TABLE error_log